name: build-and-test-differential

on:
  pull_request:

jobs:
  build-and-test-differential:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        rosdistro:
          - humble
        include:
          - rosdistro: humble
            container: ros:humble
            build-depends-repos: build_depends.repos
    env:
      CCACHE_DIR: /root/.ccache
      CC: /usr/lib/ccache/gcc
      CXX: /usr/lib/ccache/g++

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Remove exec_depend
        uses: autowarefoundation/autoware-github-actions/remove-exec-depend@v1

      - name: Get modified packages
        id: get-modified-packages
        uses: autowarefoundation/autoware-github-actions/get-modified-packages@v1

      - run: ./.github/workflows/scripts/ensure-apt-up-to-date.sh
      - run: ./.github/workflows/scripts/setup-ccache.sh

      - uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}-${{ github.run_id }}-${{ github.run_attempt }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Clear ccache stats
        run: |
          ccache --zero-stats
        shell: bash

      - name: Build
        id: build
        if: steps.get-modified-packages.outputs.modified-packages != ''
        uses: autowarefoundation/autoware-github-actions/colcon-build@v1
        with:
          rosdistro: ${{ matrix.rosdistro }}
          target-packages: ${{ steps.get-modified-packages.outputs.modified-packages }}
          build-depends-repos: ${{ matrix.build-depends-repos }}

      - name: Show ccache stats after build
        run: |
          du -sh ${CCACHE_DIR} && ccache -s
        shell: bash

      - name: Test
        id: test
        if: steps.build.outcome == 'success'
        uses: autowarefoundation/autoware-github-actions/colcon-test@v1
        with:
          rosdistro: ${{ matrix.rosdistro }}
          target-packages: ${{ steps.get-modified-packages.outputs.modified-packages }}
          build-depends-repos: ${{ matrix.build-depends-repos }}

      - name: Upload coverage to CodeCov
        if: steps.test.outputs.coverage-report-files != ''
        uses: codecov/codecov-action@v4
        with:
          files: ${{ steps.test.outputs.coverage-report-files }}
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true
          flags: differential

  fb-infer-differential:
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        rosdistro:
          - humble
        ref:
          - ${{ github.event.pull_request.head.sha }}
          - ${{ github.event.pull_request.base.sha }}
        include:
          - rosdistro: humble
            container: ros:humble
            build-depends-repos: build_depends.repos
    env:
      # Compilation with Clang is required for FB Infer
      CC: /usr/lib/ccache/clang-15
      CXX: /usr/lib/ccache/clang++-15
      CCACHE_DIR: /root/.ccache
      FB_INFER_VERSION: 1.2.0
    steps:
      - name: Check out PR repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get modified packages
        id: get-modified-packages
        uses: autowarefoundation/autoware-github-actions/get-modified-packages@v1

      - name: Back up .github folder
        run: |
          cp -r .github /tmp/.github-backup

      - name: Checkout matrix ref code
        id: checkout-ref
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ matrix.ref }}

      - name: Restore .github folder
        run: |
          rm -rf .github
          mv /tmp/.github-backup .github

      - run: ./.github/workflows/scripts/ensure-apt-up-to-date.sh
      - run: ./.github/workflows/scripts/setup-ccache.sh
      - run: ./.github/workflows/scripts/setup-clang.sh
      - run: ./.github/workflows/scripts/setup-infer.sh

      - name: Cache analysis results
        id: cache-analysis
        uses: actions/cache@v4
        with:
          path: infer-out/
          key: infer-${{ matrix.ref }}-${{ runner.os }}

      - uses: actions/cache@v4
        if: steps.cache-analysis.outputs.cache-hit != 'true'
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}-${{ github.run_id }}-${{ github.run_attempt }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Clear ccache stats
        if: steps.cache-analysis.outputs.cache-hit != 'true'
        run: |
          ccache --zero-stats
        shell: bash

      - name: Remove exec_depend
        if: steps.cache-analysis.outputs.cache-hit != 'true'
        uses: autowarefoundation/autoware-github-actions/remove-exec-depend@v1

      - name: Build
        id: build
        if: steps.cache-analysis.outputs.cache-hit != 'true'
        uses: autowarefoundation/autoware-github-actions/colcon-build@v1
        with:
          rosdistro: ${{ matrix.rosdistro }}
          target-packages: ${{ steps.get-modified-packages.outputs.modified-packages }}
          build-depends-repos: ${{ matrix.build-depends-repos }}
          cmake-build-type: Debug  # Faster compilation than Release

      - name: Show ccache stats after build
        if: steps.cache-analysis.outputs.cache-hit != 'true'
        run: |
          du -sh ${CCACHE_DIR} && ccache -s
        shell: bash

      - name: Analyze using Facebook Infer
        id: fb-analyze
        if: steps.cache-analysis.outputs.cache-hit != 'true'
        run: |
          infer capture --compilation-database build/compile_commands.json
          # Produces an `infer-out/` directory in the current working directory
          infer analyze

      - name: Upload FB Infer Reports
        id: upload-infer-reports
        uses: actions/upload-artifact@v4
        with:
          name: infer-report-${{ matrix.ref }}
          path: |
            infer-out/report.json
          if-no-files-found: error

  fb-infer-report:
    runs-on: ubuntu-latest
    needs: [fb-infer-differential]
    env:
      FB_INFER_VERSION: 1.2.0
    steps:
      - name: Check out GitHub workflow definitions
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # This repo checkout is only for .github workflow definitions. Use the feature branch's version as it might contain updated functionality.
          ref: ${{ github.head_ref }}
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            .github/
      - run: ./.github/workflows/scripts/ensure-apt-up-to-date.sh
      - run: ./.github/workflows/scripts/setup-infer.sh

      - name: Download FB Infer report (PR head ref)
        id: download-infer-reports
        uses: actions/download-artifact@v4
        with:
          name: infer-report-${{ github.event.pull_request.head.sha }}
          path: infer-report-head

      - name: Download FB Infer report (PR base ref)
        uses: actions/download-artifact@v4
        with:
          name: infer-report-${{ github.event.pull_request.base.sha }}
          path: infer-report-base

      - name: Compare reports
        run: |
          # Produces an `infer-out/` directory in the current working directory
          infer reportdiff \
            --report-current infer-report-head/report.json \
            --report-previous infer-report-base/report.json

      - name: Upload FB Infer Reports
        id: upload-infer-reports
        uses: actions/upload-artifact@v4
        with:
          name: infer-reports-${{ github.sha }}
          path: |
            infer-report-head/report.json
            infer-out/*
          if-no-files-found: error

      - name: Generate Infer summary
        id: generate-infer-summary
        run: |
          python3 .github/workflows/scripts/summarize-infer-diff.py \
            infer-out/differential \
            ${{ steps.upload-infer-reports.outputs.artifact-url }} \
            infer-summary.md

      - name: Find Comment
        if: ${{ steps.generate-infer-summary.outcome == 'success' }}
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: FB Infer

      # If the comment-id is empty, this creates a new comment
      - name: Post or update PR comment
        if: ${{ steps.generate-infer-summary.outcome == 'success' }}
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-file: infer-summary.md
          edit-mode: replace
